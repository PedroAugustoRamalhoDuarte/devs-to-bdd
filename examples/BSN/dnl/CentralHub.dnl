
accepts input on BadThermometerData !
generates output on Alert !

to start, hold in sendCollectThermometerData for time 1!
after sendCollectThermometerData output CollectThermometerData!
from sendCollectThermometerData go to waitforGoodThermometerData!
output event for sendCollectThermometerData
<%//Add your own code
output.add(outCollectThermometerData,null);
%>!
internal event for sendCollectThermometerData
<%//place your own code for internal event here.
%>!
passivate in waitforGoodThermometerData !
when in waitforGoodThermometerData and receive GoodThermometerData go to sendCollectThermometerData2!external event for waitforGoodThermometerData with GoodThermometerData
<%//Add your own code
Serializable variable = messageList.get(0).getData();
%>!
hold in sendCollectThermometerData2 for time 1!
after sendCollectThermometerData2 output CollectThermometerData2!
from sendCollectThermometerData2 go to waitforBadThermometerData!output event for sendCollectThermometerData2
<%//Add your own code
output.add(outCollectThermometerData2,null);
%>!

internal event for sendCollectThermometerData2
<%//place your own code for internal event here.
%>!
passivate in waitforBadThermometerData !
when in waitforBadThermometerData and receive BadThermometerData go to sendAlert!external event for waitforBadThermometerData with BadThermometerData
<%//Add your own code
Serializable variable = messageList.get(0).getData();
%>!
hold in sendAlert for time 1!
after sendAlert output Alert!
from sendAlert go to passive!
output event for sendAlert
<%//Add your own code
output.add(outAlert,null);
%>!
internal event for sendAlert
<%//place your own code for internal event here.
%>!
passivate in passive!